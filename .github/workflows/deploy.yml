name: Deploy GitBook to GitHub Pages

on:
  # 触发条件：推送到 master 分支时触发
  push:
    branches: ["master"]
  release:
    types: [published]
  # 允许手动在 Actions 标签页触发工作流
  workflow_dispatch:

# 设置权限，允许写入 Pages
permissions:
  contents: read
  pages: write
  id-token: write
  # 为发布Release增加写入权限
  attestations: write
  deployments: write

# 允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job 1: 部署到 GitHub Pages 
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码（获取您的源码）
      - name: Checkout
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境（GitBook 依赖 Node.js）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '10.20' # 推荐使用 18 或 20 等 LTS 版本

      # 3. 安装 GitBook CLI
      - name: Install GitBook
        run: |
          npm install -g gitbook-cli

      # 4. 安装 GitBook 插件（根据您的 book.json 配置）
      - name: Install plugins
        run: |
          gitbook install
        # 为下一个Job缓存GitBook安装
        env:
          CI: true

      # 5. 构建静态网站（生成 _book 目录）
      - name: Build with GitBook
        run: |
          gitbook build

      # 6. 设置 Pages（官方推荐动作）
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 7. 上传构建产物 (_book 目录) 作为 Pages 的素材
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_book' # GitBook 构建的默认输出目录

      # 8. 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


        # Job 2: 构建电子书并上传到Release (新增功能)
        build-ebooks:
          # 这个Job需要在上一个Job之后运行，以便复用缓存
          needs: deploy-pages
          runs-on: ubuntu-latest
          # 仅当是发布Release时才运行此Job，推送到分支时不运行
          if: ${{ github.event_name == 'release' }}

          steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js (for GitBook)
              uses: actions/setup-node@v4
              with:
                node-version: '10.20'

            - name: Install GitBook (Restore from Cache)
              run: |
                npm install -g gitbook-cli
                gitbook install
              env:
                CI: true

            - name: Build Ebooks
              run: |
                # 构建PDF版本
                gitbook pdf ./ ./家庭维修手册.pdf
                # 构建EPUB版本
                gitbook epub ./ ./家庭维修手册.epub
                # 构建Mobi版本 (可选)
                # gitbook mobi ./ ./家庭维修手册.mobi

                # 列出生成的文件，确认成功
                ls -la ./*.pdf ./*.epub ./*.mobi 2>/dev/null || true

            - name: Upload Ebooks to Release
              # 这是一个专门用于上传资源到Release的Action
              uses: softprops/action-gh-release@v1
              with:
                # 将上面构建的所有电子书文件附加到当前触发工作流的Release中
                files: |
                  家庭维修手册.pdf
                  家庭维修手册.epub
                  # 家庭维修手册.mobi
              env:
                # 授予GITHUB_TOKEN上传Release的权限
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}